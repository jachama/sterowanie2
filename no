// GF --- Networking with Arduino ---
// Playlist: https://www.youtube.com/playlist?list=PLRFnGJH1nJiLHYm9srWgtj-b3No7ODAC1
// ENC28J60 Step by Step: Part 2 - https://www.youtube.com/watch?v=IFk06lgT4Bg

#include <EtherCard.h>

// MAC Address 
static byte mymac[] = { 0x5A,0x5A,0x5A,0x5A,0x5A,0x5A };

// Static IP Address
static byte myip[] = { 192,168,0,222 };

// Buffer to hold data on the Web-page
byte Ethernet::buffer[900];
BufferFiller bfill;

int LedPins[] = { 2,3,4,5,6,7,8,9 };

boolean PinStatus[] = { 2,3,4,5,6,7,8,9 };

//-------------

const char http_OK[] PROGMEM =
"HTTP/1.0 200 OK\r\n"
"Content-Type: text/html\r\n"
"Pragma: no-cache\r\n\r\n";

const char http_Found[] PROGMEM =
"HTTP/1.0 302 Found\r\n"
"Location: /\r\n\r\n";

const char http_Unauthorized[] PROGMEM =
"HTTP/1.0 401 Unauthorized\r\n"
"Content-Type: text/html\r\n\r\n"
"<h1>401 Unauthorized</h1>";

//------------

// Web page content data
void homePage()
{
  bfill.emit_p(PSTR("$F"
    "<title>Sterowanie pokoju</title>" 
   "Oswietlenie terrarium dzien: <a href=\"?ArduinoPIN1=$F\">$F</a><br />"
    "Arduino PIN 2: <a href=\"?ArduinoPIN2=$F\">$F</a><br />"  
    "Arduino PIN 3: <a href=\"?ArduinoPIN3=$F\">$F</a><br />"
    "Arduino PIN 4: <a href=\"?ArduinoPIN4=$F\">$F</a><br />"
    "Arduino PIN 5: <a href=\"?ArduinoPIN5=$F\">$F</a><br />"
    "Arduino PIN 6: <a href=\"?ArduinoPIN6=$F\">$F</a><br />"
    "Arduino PIN 7: <a href=\"?ArduinoPIN7=$F\">$F</a><br />"   
    "Arduino PIN 8: <a href=\"?ArduinoPIN8=$F\">$F</a>"),   

  http_OK,
  PinStatus[0]?PSTR("off"):PSTR("on"),
  PinStatus[0]?PSTR("<font color=\"green\"><b>ON</b></font>"):PSTR("<font color=\"red\">OFF</font>"), 
  PinStatus[1]?PSTR("off"):PSTR("on"),
  PinStatus[1]?PSTR("<font color=\"green\"><b>ON</b></font>"):PSTR("<font color=\"red\">OFF</font>"),
  PinStatus[2]?PSTR("off"):PSTR("on"),
  PinStatus[2]?PSTR("<font color=\"green\"><b>ON</b></font>"):PSTR("<font color=\"red\">OFF</font>"),
  PinStatus[3]?PSTR("off"):PSTR("on"),
  PinStatus[3]?PSTR("<font color=\"green\"><b>ON</b></font>"):PSTR("<font color=\"red\">OFF</font>"),
  PinStatus[4]?PSTR("off"):PSTR("on"),
  PinStatus[4]?PSTR("<font color=\"green\"><b>ON</b></font>"):PSTR("<font color=\"red\">OFF</font>"),
  PinStatus[5]?PSTR("off"):PSTR("on"),
  PinStatus[5]?PSTR("<font color=\"green\"><b>ON</b></font>"):PSTR("<font color=\"red\">OFF</font>"),
  PinStatus[6]?PSTR("off"):PSTR("on"),
  PinStatus[6]?PSTR("<font color=\"green\"><b>ON</b></font>"):PSTR("<font color=\"red\">OFF</font>"), 
  PinStatus[7]?PSTR("off"):PSTR("on"),
  PinStatus[7]?PSTR("<font color=\"green\"><b>ON</b></font>"):PSTR("<font color=\"red\">OFF</font>"));
}

//------------------------

void setup()
{
  Serial.begin(9600);

  if (ether.begin(sizeof Ethernet::buffer, mymac, 10) == 0);

  if (!ether.dhcpSetup()); 

  ether.printIp("My Router DHCP assigned IP: ", ether.myip);

  ether.staticSetup(myip);

  ether.printIp("My Static IP: ", ether.myip);

  //-----
//  Serial.println(" ===== SETUP =====");

  for(int i = 0; i <= 7; i++)
  {
    pinMode(LedPins[i],OUTPUT); 
    PinStatus[i]=false;
/* -- Uncomment for DEBUG --    
    Serial.print(i);
    Serial.print(" -> LedPins: ");
    Serial.print(LedPins[i]);
    Serial.print(" -> PinStatus: ");
    Serial.println(PinStatus[i]);
/**/    
  }  
}

// --------------------------------------

void loop()
{

  delay(1);

  word len = ether.packetReceive();   // check for Ethernet packet
  word pos = ether.packetLoop(len);   // check for TCP packet

  if (pos) {
    bfill = ether.tcpOffset();
    char *data = (char *) Ethernet::buffer + pos;
    if (strncmp("GET /", data, 5) != 0) {
      bfill.emit_p(http_Unauthorized);
    }
    else {

      data += 5;
      if (data[0] == ' ') {       
        homePage(); // Return home page
        
//        Serial.println(" ===== LOOP =====");
        for (int i = 0; i <= 7; i++)
        {
          digitalWrite(LedPins[i],PinStatus[i]);
/* -- Uncomment for DEBUG --    
          Serial.print(i);
          Serial.print(" -> LedPins: ");
          Serial.print(LedPins[i]);
          Serial.print(" -> PinStatus: ");
          Serial.println(PinStatus[i]);
/**/    
        }
      }

      // "16" = # of characters in the string "?ArduinoPINx=on "
      else if (strncmp("?ArduinoPIN1=on ", data, 16) == 0) {
        PinStatus[0] = true;        
        bfill.emit_p(http_Found);
      }
      else if (strncmp("?ArduinoPIN2=on ", data, 16) == 0) {
        PinStatus[1] = true;        
        bfill.emit_p(http_Found);
      }
      else if (strncmp("?ArduinoPIN3=on ", data, 16) == 0) {
        PinStatus[2] = true;        
        bfill.emit_p(http_Found);
      }
      else if (strncmp("?ArduinoPIN4=on ", data, 16) == 0) {
        PinStatus[3] = true;        
        bfill.emit_p(http_Found);
      }
      else if (strncmp("?ArduinoPIN5=on ", data, 16) == 0) {
        PinStatus[4] = true;        
        bfill.emit_p(http_Found);
      }
      else if (strncmp("?ArduinoPIN6=on ", data, 16) == 0) {
        PinStatus[5] = true;        
        bfill.emit_p(http_Found);
      }
      else if (strncmp("?ArduinoPIN7=on ", data, 16) == 0) {
        PinStatus[6] = true;        
        bfill.emit_p(http_Found);
      }
      else if (strncmp("?ArduinoPIN8=on ", data, 16) == 0) {
        PinStatus[7] = true;        
        bfill.emit_p(http_Found);
      }

      // "17" = # of characters in the string "?ArduinoPINx=off "  

      else if (strncmp("?ArduinoPIN1=off ", data, 17) == 0) {
        PinStatus[0] = false;        
        bfill.emit_p(http_Found);
      }
      else if (strncmp("?ArduinoPIN2=off ", data, 17) == 0) {
        PinStatus[1] = false;        
        bfill.emit_p(http_Found);
      }
      else if (strncmp("?ArduinoPIN3=off ", data, 17) == 0) {
        PinStatus[2] = false;        
        bfill.emit_p(http_Found);
      }
      else if (strncmp("?ArduinoPIN4=off ", data, 17) == 0) {
        PinStatus[3] = false;        
        bfill.emit_p(http_Found);
      }
      else if (strncmp("?ArduinoPIN5=off ", data, 17) == 0) {
        PinStatus[4] = false;        
        bfill.emit_p(http_Found);
      }
      else if (strncmp("?ArduinoPIN6=off ", data, 17) == 0) {
        PinStatus[5] = false;        
        bfill.emit_p(http_Found);
      }
      else if (strncmp("?ArduinoPIN7=off ", data, 17) == 0) {
        PinStatus[6] = false;        
        bfill.emit_p(http_Found);
      }
      else if (strncmp("?ArduinoPIN8=off ", data, 17) == 0) {
        PinStatus[7] = false;        
        bfill.emit_p(http_Found);
      }

      //---------------------------

      else {
        // Page not found
        bfill.emit_p(http_Unauthorized);
      }
    }
    ether.httpServerReply(bfill.position());    // send http response
  }
}
